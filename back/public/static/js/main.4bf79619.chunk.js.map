{"version":3,"sources":["Component/Hader.js","Component/Spinner.js","Component/ProductItem.js","Component/Recherche.js","page/Products.js","actions/ProductService.js","actions/types.js","Component/ReviewItem.js","page/SingleProd.js","reducers/Products.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Hader","className","href","src","alt","width","Box","CircularProgress","color","ProductItem","products","_id","category","productName","imageUrl","createdAt","reviews","Card","CardActionArea","height","CardMedia","component","image","title","CardContent","Typography","gutterBottom","variant","format","rate","length","map","el","value","reduce","a","b","Rating","name","reviewscalculate","CardActions","to","Button","connect","state","product","handelRecherche","setformvValue","formvValue","handelchangevalue","event","target","replace","onSubmit","htmlFor","onChange","id","type","placeholder","index","key","onClick","useStyles1","makeStyles","theme","root","marginTop","spacing","getProducts","formData","recherche","dispatch","console","log","queryString","stringify","axios","get","res","payload","data","curentpage","Math","ceil","totalData","getAllCategory","loading","totalPage","classes1","useState","formdata","setFormData","useEffect","step","preventDefault","Spinner","rating","Pagination","count","page","ReviewItem","Paper","elevation","content","getProductbyID","prodId","match","params","price","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Products","SingleProd","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0KAkBeA,MAhBf,WAEI,OACE,yBAAKC,UAAU,oBACf,yBAAKA,UAAU,gBACf,uBAAGA,UAAU,cAAb,sBACE,uBAAGC,KAAK,0BACN,yBAAKD,UAAU,qBAAoB,yBAAKA,UAAU,kBAAiBE,IAAI,eAAeC,IAAI,OAAQC,MAAO,c,oGCJpG,oBACX,kBAAC,WAAD,KAEJ,yBAAKJ,UAAU,aAEH,yBAAKA,UAAU,8DAE3B,kBAACK,EAAA,EAAD,CAAKL,UAAU,UACf,kBAACM,EAAA,EAAD,CAAkBC,MAAM,mB,kHC6ETC,EAxEK,SAAC,GAAgF,IAAD,IAA7EC,SAAYC,EAAiE,EAAjEA,IAAKC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,QAkBhF,OACI,kBAAC,WAAD,KACK,kBAACC,EAAA,EAAD,CAAMhB,UAAU,0BACvB,kBAACiB,EAAA,EAAD,KAKN,kBAAC,IAAD,CAAUC,OAAQ,KACV,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVjB,IAAI,wBACJe,OAAO,MACNG,MAAOR,GAAqB,iBAC7Bb,UAAU,UACVsB,MAAM,2BAGR,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKN,UAAU,MAAhD,cACYT,GAEZ,kBAACa,EAAA,EAAD,CAAYE,QAAQ,QAAQnB,MAAM,gBAAgBa,UAAU,KAA5D,iBACeR,GAIf,kBAACY,EAAA,EAAD,CAAYE,QAAQ,QAAQnB,MAAM,gBAAgBa,UAAU,KAA5D,kBACe,kBAAC,IAAD,CAAQO,OAAO,cAAcb,IA5C7B,SAACC,GACtB,IAAIa,EAAO,EACRb,EAAQc,OAAS,IAGjBD,EAFgBb,EAAQe,KAAI,SAAAC,GAAE,OAAIA,EAAGC,SACTC,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAIC,KAC5BpB,EAAQc,QAE/B,OAAU,kBAACO,EAAA,EAAD,CACVC,KAAK,oBACLL,MAAOJ,IAsCCU,CAAiBvB,KAKvB,kBAACwB,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,GAAE,kBAAa9B,IACS,kBAAC+B,EAAA,EAAD,0B,iBC2BpC,IAIeC,eAJQ,SAACC,GAAD,MAAY,CACjClC,SAAUkC,EAAMlC,SAChBmC,QAASD,EAAMC,WAEsB,KAAxBF,EAtGf,YAKI,IAJU/B,EAIX,EAJDF,SAAYE,SACZkC,EAGC,EAHDA,gBACAC,EAEC,EAFDA,cACAC,EACC,EADDA,WAEMC,EAAoB,SAACC,GACzB,IAAMZ,EAAOY,EAAMC,OAAOb,KACpBL,EAAQiB,EAAMC,OAAOlB,MACI,KAA3BA,EAAMmB,QAAQ,IAAK,IACrBL,EAAc,2BAAKC,GAAN,kBAAmBV,EAAOL,aAEhCe,EAAWV,GAClBS,EAAc,eAAKC,MAIvB,OACE,6BACE,yBAAK/C,UAAU,aACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,QAAd,sBAEF,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,0BAAMoD,SAAUP,GACd,yBAAK7C,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOqD,QAAQ,eAAf,OACA,2BACEC,SAAUN,EACVhD,UAAU,eACVuD,GAAG,cACHlB,KAAK,cACLmB,KAAK,OACLC,YAAY,UAIlB,yBAAKzD,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOqD,QAAQ,YAAf,gBACA,4BACEC,SAAUN,EACVhD,UAAU,eACVuD,GAAG,WACHlB,KAAK,YAEL,4BAAQL,MAAM,IAAd,8BACCrB,EAASmB,KAAI,SAACC,EAAI2B,GACjB,OACE,4BAAQC,IAAKD,EAAO1B,MAAOD,GACxBA,OAKT,uBAAG/B,UAAU,4BAGjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOqD,QAAQ,SAAf,QACA,2BACEC,SAAUN,EACVhD,UAAU,eACVuD,GAAG,QACHlB,KAAK,QACLmB,KAAK,SACLC,YAAY,UAKpB,4BACEzD,UAAU,mCACVwD,KAAK,UAFP,aAKE,uBAAGxD,UAAU,2BAEf,4BACEA,UAAU,kCACVwD,KAAK,QACLI,QAAS,kBAAMd,EAAc,MAH/B,6B,SC5EVe,EAAaC,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,SAgGhBxB,eAHQ,SAACC,GAAD,MAAY,CACjClC,SAAUkC,EAAMlC,YAEqB,CAAE0D,YC1Gd,SAACC,GAAD,IAAUC,EAAV,uDAAoB,KAApB,8CAA6B,WAAMC,GAAN,eAAApC,EAAA,6DACxDqC,QAAQC,IAAIJ,EAASC,EAAUI,IAAYC,UACvCL,IAFoD,SAKhDC,EAAS,CACLd,KCLiB,oBDD2B,SAQ9BmB,IAAMC,IAAN,mBAAsBR,EAAtB,YAAkCK,IAAYC,UAC5DL,KAT4C,OAQ1CQ,EAR0C,OAYhDP,EAAS,CACLd,KCjBgB,eDkBhBsB,QAASD,EAAIE,KAAKC,aAEtBV,EAAS,CACLd,KClBiB,kBDmBjBsB,QAASG,KAAKC,KAAKL,EAAIE,KAAKI,UAAY,MAlBI,kDAqBhDb,EAAS,CACLd,KCzBiB,kBDG2B,0DAA7B,uDD0G2B4B,eCzDzB,yDAAM,WAAMd,GAAN,eAAApC,EAAA,+EAITyC,IAAMC,IAAN,eAJS,OAIrBC,EAJqB,OAK3BP,EAAS,CACLd,KCvDc,eDwDdsB,QAASD,EAAIE,OAPU,gDAW3BT,EAAS,CACLd,KChEiB,kBDoDM,yDAAN,wDDyDdd,EA5FE,SAAC,GAIX,IAHL0C,EAGI,EAHJA,eACAjB,EAEI,EAFJA,YAEI,IADJ1D,SAAYA,EACR,EADQA,SAAU4E,EAClB,EADkBA,QAASC,EAC3B,EAD2BA,UAEzBC,EAAW1B,IADb,EAE0B2B,mBAAS,GAFnC,mBAECC,EAFD,KAEWC,EAFX,OAI8BF,mBAAS,MAJvC,mBAICzC,EAJD,KAIaD,EAJb,KAKJ6C,qBAAU,WACRxB,EAAY,GACZiB,MACC,CAACjB,EAAaiB,IARb,IAUEQ,EAASH,EAATG,KAWA/C,EAAkB,SAACI,GACvBA,EAAM4C,iBAEN1B,EADmB,EACOpB,GAC1B2C,EAAY,IAcd,OACE,kBAAC,WAAD,KACGL,EACC,kBAACS,EAAD,MAEA,yBAAK9F,UAAU,mBACb,mDACA,2BACEwD,KAAK,SACLC,YAAY,mBACZH,SAtBW,SAACL,GACpBsB,QAAQC,IAAIvB,EAAMC,OAAOlB,OACzB,IAAMA,EAAQiB,EAAMC,OAAOlB,MACb,KAAVA,GACFc,EAAc,2BAAK2C,GAAN,IAAgBM,OAAQ/D,KACrCa,EAAgBI,YAETF,EAAU,OACjBD,EAAc,eAAKC,QAiBf,kBAAC,EAAD,CACEF,gBAAiBA,EACjBC,cAAeA,EACfC,WAAYA,IAEd,yBAAK/C,UAAU,OACZS,EAASoB,OAAS,EACjBpB,GACAA,EAASqB,KAAI,SAACrB,GAAD,OACX,kBAAC,EAAD,CAAakD,IAAKlD,EAASC,IAAKD,SAAUA,OAG5C,kDAGJ,yBAAKT,UAAWuF,EAASvB,MACvB,kBAACgC,EAAA,EAAD,CACEC,MAAOX,EACPjD,KAAK,OACL6D,KAAMT,EACNnC,SA7DS,SAACL,EAAOjB,GAC3BuC,QAAQC,IAAIxC,GACZ0D,EAAY1D,GACZ4D,EAAqB,IAAb5D,EAAQ,GAChBuC,QAAQC,IAAIoB,GAGZzB,EAFAsB,EAAWG,EAEW7C,Y,SGtBXoD,EAdI,SAAC,GAAiB,IAAfpF,EAAc,EAAdA,QACpB,OACE,yBAAKf,UAAU,aACb,kBAACoG,EAAA,EAAD,CAAOC,UAAW,EAAGrG,UAAU,OAC7B,sCAEE,kBAACoC,EAAA,EAAD,CAAQC,KAAK,oBAAoBL,MAAOjB,EAAQiB,SAElD,wCAAcjB,EAAQuF,YCoCf5D,eAHQ,SAACC,GAAD,MAAY,CACjClC,SAAUkC,EAAMlC,YAEqB,CAAE8F,eHhBX,SAAAC,GAAM,8CAAI,WAAMlC,GAAN,eAAApC,EAAA,sEAGhCoC,EAAS,CACLd,KC/BiB,oBDiCrBe,QAAQC,IAAIgC,GANoB,SAOd7B,IAAMC,IAAN,sBAAyB4B,IAPX,OAO1B3B,EAP0B,OAQhCP,EAAS,CACLd,KCvCe,cDwCfsB,QAASD,EAAIE,OAVe,gDAchCT,EAAS,CACLd,KC9CiB,kBD+BW,yDAAJ,wDGgBrBd,EAzCI,SAAC,GAIb,IAAD,IAHJjC,SAAYmC,EAGR,EAHQA,QAASyC,EAGjB,EAHiBA,QACrBoB,EAEI,EAFJA,MACAF,EACI,EADJA,eAMA,OAJAZ,qBAAU,WACRY,EAAeE,EAAMC,OAAOnD,MAC3B,CAACgD,EAAgBE,EAAMC,OAAOnD,KAG/B,kBAAC,WAAD,KACG8B,EACC,kBAACS,EAAD,MAEA,yBAAK9F,UAAU,2CACb,yBAAKA,UAAU,YACb,yBAAKE,IAAK0C,EAAQ/B,SAAUV,IAAKyC,EAAQ/B,YAE3C,yBAAKb,UAAU,YACb,uCACA,wBAAIA,UAAU,cAAd,gBAAyC4C,EAAQhC,aACjD,uBAAGZ,UAAU,QAAb,aAA+B4C,EAAQjC,UACvC,uBAAGX,UAAU,SAAb,UAA6B4C,EAAQ+D,QAGvC,6BACG/D,GACCA,EAAQ7B,SACR6B,EAAQ7B,QAAQe,KAAI,SAACf,GAAD,OAClB,kBAAC,EAAD,CAAY4C,IAAK5C,EAAQL,IAAKK,QAASA,a,iCClCjD6F,EAAe,CACjBnG,SAAU,GACVmC,QAAS,KACTyC,SAAS,EACTC,UAAY,EACZ3E,SAAS,ICLEkG,4BAAgB,CAE3BpG,SDMW,WAAyC,IAA/BkC,EAA8B,uDAAtBiE,EAAcE,EAAQ,uCAC3CtD,EAAkBsD,EAAlBtD,KAAMsB,EAAYgC,EAAZhC,QACd,OAAQtB,GACJ,IHboB,eGehB,OAAO,2BACAb,GADP,IAEIlC,SAAUqE,EACVO,SAAS,IAEb,IHhBc,eGiBV,kCACO1C,GADP,IAEIhC,SAASmE,IAGjB,IHvBiB,kBGwBjB,OAAO,2BACAnC,GADP,IAEI2C,UAAUR,IAElB,IH7BmB,cG8Bf,OAAO,2BACAnC,GADP,IAEIC,QAASkC,EACTO,SAAS,IAEjB,IHpCqB,gBGqCjB,OAAO,2BACA1C,GADP,IAEI0C,SAAS,IAGb,IHtCiB,kBGuCb,OAAO,2BACA1C,GADP,IAEI0C,SAAS,IAGrB,QACI,OAAO1C,ME1CboE,EAAa,CAACC,KAILC,EAHDC,sBAAYC,EAFL,GAEgCC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,OCe7EO,MAff,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,KAAK,QAAQnG,UAAWoG,IAC/B,kBAAC,IAAD,CAAOD,KAAK,cAAcnG,UAAWqG,IACrC,kBAAC,IAAD,CAAUjF,GAAG,cCLHkF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2DCXNqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnE,QAAQmE,MAAMA,EAAMC,a","file":"static/js/main.4bf79619.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Hader() {\r\n\r\n    return(\r\n      <div className='nav bg-dark mb-2'>\r\n      <div className=\"navbar w-100\">\r\n      <p className=\"text-white\">Test Technique ATS</p>\r\n        <a href=\"http://localhost:3000/\">\r\n          <div className=\"logo-navbar sign \"><img className='logo-navbar-img'src=\"/logo192.png\" alt='logo'  width={\"80px\"} />\r\n          \r\n\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Hader","import React, { Fragment } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n\r\n<div className=\"container\">\r\n    \r\n            <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\r\n                \r\n<Box className='m-auto' >\r\n<CircularProgress color=\"secondary\" />\r\n\r\n    </Box>\r\n            </div>\r\n      \r\n</div>\r\n    </Fragment>\r\n\r\n\r\n\r\n);","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from '@material-ui/core/Card';\r\nimport LazyLoad from 'react-lazyload';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Moment from 'react-moment'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst ProductItem = ({ products: { _id, category, productName, imageUrl, createdAt, reviews } }) => {\r\n\r\n  \r\nconst reviewscalculate = (reviews) => {\r\n    let rate = 0 \r\n    if(reviews.length > 0){\r\n        let valuetab = reviews.map(el => el.value)\r\n       let totalvalue  =  valuetab.reduce((a,b) => a + b)\r\n       rate = totalvalue / reviews.length;\r\n    }\r\n    return    <Rating\r\n    name=\"simple-controlled\"\r\n    value={rate}\r\n   \r\n  />\r\n}\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n             <Card className=\"m-3 col-sm-6 col-md-3 \">\r\n      <CardActionArea>\r\n     \r\n\r\n\r\n\r\n<LazyLoad height={150}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"150\"\r\n           image={imageUrl ? imageUrl :\"/imageload.gif\"}\r\n          className=\"spinner\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        </LazyLoad>\r\n        <CardContent>\r\n   \r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Category : {category}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          productName : {productName}\r\n          </Typography>\r\n          \r\n          \r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          createdAt :    <Moment format='YYYY/MM/DD'>{createdAt}</Moment>\r\n          </Typography>\r\n          {\r\n            reviewscalculate(reviews)\r\n           }\r\n       \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n      <Link to={`/Single/${_id}`}>\r\n                                    <Button>View Details</Button></Link>\r\n       \r\n      </CardActions>\r\n    </Card>\r\n\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nProductItem.propTypes = {\r\n    products: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProductItem\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Recherche({\r\n  products: { category },\r\n  handelRecherche,\r\n  setformvValue,\r\n  formvValue,\r\n}) {\r\n  const handelchangevalue = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    if (value.replace(\" \", \"\") !== \"\")\r\n      setformvValue({ ...formvValue, [name]: value });\r\n    else {\r\n      delete formvValue[name];\r\n      setformvValue({ ...formvValue });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"mb-0\">Recherche produit</h5>\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <form onSubmit={handelRecherche}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"productName\">Nom</label>\r\n                      <input\r\n                        onChange={handelchangevalue}\r\n                        className=\"form-control\"\r\n                        id=\"productName\"\r\n                        name=\"productName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Nom\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"category\">Catégorie</label>\r\n                      <select\r\n                        onChange={handelchangevalue}\r\n                        className=\"form-control\"\r\n                        id=\"category\"\r\n                        name=\"category\"\r\n                      >\r\n                        <option value=\"\">selectioner votre category</option>\r\n                        {category.map((el, index) => {\r\n                          return (\r\n                            <option key={index} value={el}>\r\n                              {el}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <i className=\"fa fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"price\">Prix</label>\r\n                      <input\r\n                        onChange={handelchangevalue}\r\n                        className=\"form-control\"\r\n                        id=\"price\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                        placeholder=\"00\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-warning mb-3 float-right\"\r\n                  type=\"submit\"\r\n                >\r\n                  Rechercher\r\n                  <i className=\"fa fa-spinner fa-spin\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger mb-3 float-right\"\r\n                  type=\"reset\"\r\n                  onClick={() => setformvValue({})}\r\n                >\r\n                  Réinitialiser\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStatToProps = (state) => ({\r\n  products: state.products,\r\n  product: state.product,\r\n});\r\nexport default connect(mapStatToProps, null)(Recherche);\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProducts, getAllCategory } from \"../actions/ProductService\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../Component/Spinner\";\r\nimport ProductItem from \"../Component/ProductItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Recherche from \"../Component/Recherche\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nconst Products = ({\r\n  getAllCategory,\r\n  getProducts,\r\n  products: { products, loading, totalPage },\r\n}) => {\r\n  const classes1 = useStyles1();\r\n  let [formdata, setFormData] = useState(1);\r\n\r\n  let [formvValue, setformvValue] = useState(null);\r\n  useEffect(() => {\r\n    getProducts(0);\r\n    getAllCategory();\r\n  }, [getProducts, getAllCategory]);\r\n\r\n  let { step } = formdata;\r\n  const handleChange = (event, value) => {\r\n    console.log(value);\r\n    setFormData(value);\r\n    step = (value - 1) * 20;\r\n    console.log(step);\r\n    formdata = step;\r\n\r\n    getProducts(formdata, formvValue);\r\n  };\r\n\r\n  const handelRecherche = (event) => {\r\n    event.preventDefault();\r\n    let restartPager = 0;\r\n    getProducts(restartPager, formvValue);\r\n    setFormData(1);\r\n  };\r\n  const findbyrating = (event) => {\r\n    console.log(event.target.value);\r\n    const value = event.target.value;\r\n    if (value !== \"\") {\r\n      setformvValue({ ...formdata, rating: value });\r\n      handelRecherche(event);\r\n    } else {\r\n      delete formvValue[\"rating\"];\r\n      setformvValue({ ...formvValue });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"container-fluid\">\r\n          <label>Rating Recherche</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"rating recherche\"\r\n            onChange={findbyrating}\r\n          />\r\n\r\n          <Recherche\r\n            handelRecherche={handelRecherche}\r\n            setformvValue={setformvValue}\r\n            formvValue={formvValue}\r\n          />\r\n          <div className=\"row\">\r\n            {products.length > 0 ? (\r\n              products &&\r\n              products.map((products) => (\r\n                <ProductItem key={products._id} products={products} />\r\n              ))\r\n            ) : (\r\n              <h4>No products Found</h4>\r\n            )}\r\n          </div>\r\n          <div className={classes1.root}>\r\n            <Pagination\r\n              count={totalPage}\r\n              name=\"step\"\r\n              page={formdata}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  getProducts: PropTypes.func.isRequired,\r\n  products: PropTypes.object.isRequired,\r\n};\r\nconst mapStatToProps = (state) => ({\r\n  products: state.products,\r\n});\r\nexport default connect(mapStatToProps, { getProducts, getAllCategory })(\r\n  Products\r\n);\r\n","import axios from 'axios';\r\nimport { GET_PRODUCTS, PRODUCT_ERROR, GET_PRODUCT,CALCULATE_PAGER,GET_CATEGORY,LOADING_REQUEST } from './types'\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = (formData,recherche=null) => async dispatch => {\r\nconsole.log(formData,recherche,queryString.stringify(\r\n    recherche\r\n  ))\r\n    try {\r\n        dispatch({\r\n            type: LOADING_REQUEST,\r\n        })\r\n        const res = await axios.get(`/product/${formData}?${queryString.stringify(\r\n            recherche\r\n          )}`)\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: res.data.curentpage\r\n        })\r\n        dispatch({\r\n            type: CALCULATE_PAGER,\r\n            payload: Math.ceil(res.data.totalData / 20)\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n\r\n        });\r\n    }\r\n\r\n}\r\nexport const getProductbyID = prodId => async dispatch => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: LOADING_REQUEST,\r\n        })\r\n        console.log(prodId);\r\n        const res = await axios.get(`/oneproduct/${prodId}`);\r\n        dispatch({\r\n            type: GET_PRODUCT,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n\r\n        });\r\n\r\n    }\r\n}\r\nexport const getAllCategory= () => async dispatch => {\r\n\r\n    try {\r\n  \r\n        const res = await axios.get(`/productCat`);\r\n        dispatch({\r\n            type: GET_CATEGORY,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n\r\n        });\r\n\r\n    }\r\n}\r\n\r\n","export const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const PRODUCT_ERROR = 'PRODUCT_ERROR';\r\nexport const GET_PRODUCT = 'GET_PRODUCT';\r\nexport const CALCULATE_PAGER='CALCULATE_PAGER';\r\nexport const GET_CATEGORY='GET_CATEGORY';\r\nexport const LOADING_REQUEST='LOADING_REQUEST';\r\n\r\n","import React from \"react\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst ReviewItem = ({ reviews }) => {\r\n  return (\r\n    <div className=\"mt-2 mb-2\">\r\n      <Paper elevation={3} className=\"p-2\">\r\n        <h4>\r\n          Rating:\r\n          <Rating name=\"simple-controlled\" value={reviews.value} />\r\n        </h4>\r\n        <p> content :{reviews.content}</p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewItem;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport Spinner from \"../Component/Spinner\";\r\n\r\nimport { getProductbyID } from \"../actions/ProductService\";\r\nimport { connect } from \"react-redux\";\r\nimport ReviewItem from \"../Component/ReviewItem\";\r\n\r\nconst SingleProd = ({\r\n  products: { product, loading },\r\n  match,\r\n  getProductbyID,\r\n}) => {\r\n  useEffect(() => {\r\n    getProductbyID(match.params.id);\r\n  }, [getProductbyID, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"m-2 row gx-4 gx-lg-5 align-items-center\">\r\n          <div className=\"col-md-6\">\r\n            <img src={product.imageUrl} alt={product.imageUrl} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h4>Details</h4>\r\n            <h6 className=\"card-title\">ProductName :{product.productName}</h6>\r\n            <p className=\"mb-1\">Category: {product.category}</p>\r\n            <p className=\" mb-1\">Price: {product.price}</p>\r\n          </div>\r\n\r\n          <div>\r\n            {product &&\r\n              product.reviews &&\r\n              product.reviews.map((reviews) => (\r\n                <ReviewItem key={reviews._id} reviews={reviews} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStatToProps = (state) => ({\r\n  products: state.products,\r\n});\r\nexport default connect(mapStatToProps, { getProductbyID })(SingleProd);\r\n","import { GET_PRODUCTS, PRODUCT_ERROR, GET_PRODUCT,CALCULATE_PAGER,GET_CATEGORY,LOADING_REQUEST } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    product: null,\r\n    loading: true,\r\n    totalPage : 1,\r\n    category:[]\r\n\r\n}\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PRODUCTS:\r\n\r\n            return {\r\n                ...state,\r\n                products: payload,\r\n                loading: false\r\n            }\r\n            case GET_CATEGORY:{\r\n                return{\r\n                    ...state,\r\n                    category:payload\r\n                }\r\n            }\r\n            case CALCULATE_PAGER:\r\n            return {\r\n                ...state,\r\n                totalPage:payload\r\n            }\r\n        case GET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: payload,\r\n                loading: false\r\n            }\r\n        case PRODUCT_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n\r\n            }\r\n            case LOADING_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n    \r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport products from './Products'\r\nexport default combineReducers({\r\n\r\n    products\r\n\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Hader from \"./Component/Hader\";\r\nimport Products from \"./page/Products\";\r\nimport SingleProd from \"./page/SingleProd\";\r\nimport \"./App.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Hader />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/home\" component={Products} />\r\n          <Route path=\"/Single/:id\" component={SingleProd} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}