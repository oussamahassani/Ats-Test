{"version":3,"sources":["Component/Hader.js","actions/baseUrl.js","actions/ProductService.js","Component/Spinner.js","Component/ProductItem.js","Component/Recherche.js","page/Products.js","actions/types.js","Component/ReviewItem.js","page/SingleProd.js","reducers/Products.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Hader","className","to","src","alt","width","console","log","process","i","Box","CircularProgress","color","ProductItem","products","_id","category","productName","imageUrl","price","createdAt","averageScore","Card","CardActionArea","height","CardMedia","component","image","title","CardContent","Typography","gutterBottom","variant","format","Rating","name","value","CardActions","Button","connect","state","product","handelRecherche","setformvValue","formvValue","useState","inputRecherche","setinputRecherche","handelchangevalue","event","target","replace","onSubmit","htmlFor","onChange","id","type","placeholder","map","el","index","key","onClick","useStyles1","makeStyles","theme","root","marginTop","spacing","getProducts","formData","recherche","dispatch","axios","get","queryString","stringify","res","payload","data","curentpage","Math","ceil","totalData","getAllCategory","getRechercheReview","step","rate","resulta","curentPage","length","count","loading","totalPage","classes1","formdata","setFormData","inputReview","setInputReviw","useEffect","Spinner","min","max","ratingobject","rating","preventDefault","Pagination","page","ReviewItem","reviews","Paper","elevation","content","getProductbyID","prodId","match","params","description","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Products","SingleProd","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":";oLAmBeA,MAhBf,WAEI,OACE,yBAAKC,UAAU,oBACf,yBAAKA,UAAU,gBACf,uBAAGA,UAAU,cAAY,sBACzB,kBAAC,IAAI,CAACC,GAAE,KACJ,yBAAKD,UAAU,qBAAoB,yBAAKA,UAAU,kBAAiBE,IAAI,eAAeC,IAAI,OAAQC,MAAO,c,yDCTnHC,QAAQC,KAAIC,G,aCAZ,omGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAUO,I,0BCNQ,oBACX,kBAAC,WAAQ,KAEb,yBAAKR,UAAU,aAEH,yBAAKA,UAAU,8DAE3B,kBAACS,EAAA,EAAG,CAACT,UAAU,UACf,kBAACU,EAAA,EAAgB,CAACC,MAAM,mB,0GC6ETC,EAxEK,SAAH,GAA+F,IAAD,IAAxFC,SAAYC,EAAG,EAAHA,IAAKC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAASC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAetF,OACI,kBAAC,WAAQ,KACJ,kBAACC,EAAA,EAAI,CAACrB,UAAU,0BACvB,kBAACsB,EAAA,EAAc,KAKrB,kBAAC,IAAQ,CAACC,OAAQ,KACV,kBAACC,EAAA,EAAS,CACRC,UAAU,MACVtB,IAAI,wBACJoB,OAAO,MACNG,MAAOT,GAAqB,iBAC7BjB,UAAU,UACV2B,MAAM,2BAGR,kBAACC,EAAA,EAAW,KAEV,kBAACC,EAAA,EAAU,CAACC,cAAY,EAACC,QAAQ,KAAKN,UAAU,MAAI,cACxCV,GAEZ,kBAACc,EAAA,EAAU,CAACE,QAAQ,QAAQpB,MAAM,gBAAgBc,UAAU,KAAG,kBAC/CT,GAEhB,kBAACa,EAAA,EAAU,CAACE,QAAQ,QAAQpB,MAAM,gBAAgBc,UAAU,KAAG,WACtDP,GAIT,kBAACW,EAAA,EAAU,CAACE,QAAQ,QAAQpB,MAAM,gBAAgBc,UAAU,KAAG,mBAC/C,kBAAC,IAAM,CAACO,OAAO,cAAcb,IA1C1C,kBAACc,EAAA,EAAM,CACjBC,KAAK,oBACLC,MAAOf,MAgDJ,kBAACgB,EAAA,EAAW,KACZ,kBAAC,IAAI,CAACnC,GAAE,kBAAaa,IACS,kBAACuB,EAAA,EAAM,0B,iBCqC3C,IAIeC,eAJQ,SAACC,GAAK,MAAM,CACjC1B,SAAU0B,EAAM1B,SAChB2B,QAASD,EAAMC,WAEsB,KAAxBF,EAhHf,SAAmB,GAKf,IAJUvB,EAAQ,EAApBF,SAAYE,SACZ0B,EAAe,EAAfA,gBACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WAEA,EAA2CC,mBAAS,CAClD5B,YAAa2B,GAAcA,EAAW3B,YAAc2B,EAAW3B,YAAc,GAC7ED,SAAS4B,GAAcA,EAAW5B,SAAW4B,EAAW5B,SAAW,GACnEG,MAAMyB,GAAcA,EAAWzB,MAAQyB,EAAWzB,MAAQ,KAC1D,mBAJG2B,EAAc,KAAGC,EAAiB,KAMjCC,EAAoB,SAACC,GACzB,IAAMd,EAAOc,EAAMC,OAAOf,KACpBC,EAAQa,EAAMC,OAAOd,MAC3BW,EAAkB,2BAAKD,GAAc,kBAAGX,EAAOC,KAChB,KAA3BA,EAAMe,QAAQ,IAAK,IACrBR,EAAc,2BAAKC,GAAU,kBAAGT,EAAOC,aAEhCQ,EAAWT,GAClBQ,EAAc,eAAKC,MAIvB,OACE,6BACE,yBAAK3C,UAAU,aACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,QAAM,sBAEtB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,0BAAMmD,SAAUV,GACd,yBAAKzC,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOoD,QAAQ,eAAa,OAC5B,2BACEC,SAAUN,EACV/C,UAAU,eACVsD,GAAG,cACHpB,KAAK,cACLqB,KAAK,OACLpB,MAAOU,EAAe7B,YACtBwC,YAAY,UAIlB,yBAAKxD,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOoD,QAAQ,YAAU,gBACzB,4BACEC,SAAUN,EACV/C,UAAU,eACVsD,GAAG,WACHpB,KAAK,WACLC,MAAOU,EAAe9B,UAEtB,4BAAQoB,MAAM,IAAE,8BACfpB,EAAS0C,KAAI,SAACC,EAAIC,GACjB,OACE,4BAAQC,IAAKD,EAAOxB,MAAOuB,GACxBA,OAKT,uBAAG1D,UAAU,4BAGjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOoD,QAAQ,SAAO,QACtB,2BACEC,SAAUN,EACV/C,UAAU,eACVsD,GAAG,QACHpB,KAAK,QACLqB,KAAK,SACLpB,MAAOU,EAAe3B,MACtBsC,YAAY,UAKpB,4BACExD,UAAU,mCACVuD,KAAK,UAAQ,aAGb,uBAAGvD,UAAU,2BAEf,4BACEA,UAAU,kCACVuD,KAAK,QACLM,QAAS,kBAAMnB,EAAc,MAAI,6B,SCzF7CoB,EAAaC,aAAW,SAACC,GAAK,MAAM,CACxCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,SAoHhB7B,eAHQ,SAACC,GAAK,MAAM,CACjC1B,SAAU0B,EAAM1B,YAEqB,CAAEuD,YJtHvC,SAACC,GAAQ,IAAEC,EAAS,uDAAG,KAAI,8CAC3B,WAAOC,GAAQ,uEAIR,OAJQ,SAEXA,EAAS,CACPhB,KKXqB,oBLYpB,SACeiB,IAAMC,IDbxBlE,GCcS,mBAAe8D,EAAQ,YAAIK,IAAYC,UAAUL,KACxD,KAAD,EAFKM,EAAG,OAITL,EAAS,CACPhB,KKvBoB,eLwBpBsB,QAASD,EAAIE,KAAKC,aAEpBR,EAAS,CACPhB,KKxBqB,kBLyBrBsB,QAASG,KAAKC,KAAKL,EAAIE,KAAKI,UAAY,MACvC,gDAEHX,EAAS,CACPhB,KK/BqB,kBLgCpB,yDAEN,mDAvB0B,IIsHyB4B,eJ9ExB,WAAH,8CAAS,WAAOZ,GAAQ,gGAE7BC,IAAMC,IAAW,eAAkB,KAAD,EAA9CG,EAAG,OACTL,EAAS,CACPhB,KKpDoB,eLqDpBsB,QAASD,EAAIE,OACZ,gDAEHP,EAAS,CACPhB,KK5DuB,kBL6DtB,yDAEN,mDAZ0B,II8E0C6B,mBJhEnE,SAACC,GAAI,IAAEC,EAAI,uDAAG,KAAI,8CAClB,WAAOf,GAAQ,gGAEOC,IAAMC,IDhExBlE,GCiES,wBAAoB8E,EAAI,YAAIX,IAAYC,UAAUW,KACzD,KAAD,GAFKV,EAAG,QAGPE,KAAKS,SAAWX,EAAIE,KAAKS,QAAQ,GAAGC,WAAWC,OAAQ,GACzDlB,EAAS,CACPhB,KK1EoB,eL2EpBsB,QAASD,EAAIE,KAAKS,QAAQ,GAAGC,aAE/BjB,EAAS,CACPhB,KK3EqB,kBL4ErBsB,QAASG,KAAKC,KAAKL,EAAIE,KAAKS,QAAQ,GAAGL,UAAU,GAAGQ,MAAQ,OAIhEnB,EAAS,CACPhB,KKnFuB,kBLqF1B,gDAEGgB,EAAS,CACPhB,KKxFqB,kBLyFpB,yDAEN,mDA1BiB,KIgELjB,EAhHE,SAAH,GAKP,IAJL6C,EAAc,EAAdA,eACAf,EAAW,EAAXA,YACAgB,EAAkB,EAAlBA,mBAAmB,EAAD,EAClBvE,SAAYA,EAAQ,EAARA,SAAU8E,EAAO,EAAPA,QAASC,EAAS,EAATA,UAEzBC,EAAW/B,IACjB,EAA8BlB,mBAAS,GAAE,mBAApCkD,EAAQ,KAAEC,EAAW,KAC1B,EAAkCnD,mBAAS,MAAK,mBAA3CD,EAAU,KAAED,EAAa,KAC9B,EAAoCE,mBAAS,MAAK,mBAA7CoD,EAAW,KAAGC,EAAa,KAChCC,qBAAU,WACR9B,EAAY,GACZe,MACC,CAACf,EAAae,IAEFW,EAATT,KA4CN,OACE,kBAAC,WAAQ,KACNM,EACC,kBAACQ,EAAO,MAER,yBAAKnG,UAAU,mBACb,yBAAKA,UAAU,OACf,2BAAOA,UAAU,YAAU,oBAC3B,2BACGA,UAAU,WACXuD,KAAK,SACLC,YAAY,mBACZ4C,IAAI,IACJC,IAAI,IACJhD,SAhCW,SAACL,GAEpB,IAAMb,EAAQa,EAAMC,OAAOd,MAE3B,GAAc,KAAVA,EAAc,CAChB9B,QAAQC,IAAI,IACZ2F,EAAc9D,GACd,IAAImE,EAAY,2BAAO3D,GAAU,IAAC4D,OAAQpE,IAC1CiD,EAAmB,EAAEkB,QAGrBL,EAAc,MACdvD,EAAc,MACd0B,EAAY,GACZ2B,EAAY,OAqBR,kBAAC,EAAS,CACRtD,gBA9Cc,SAACO,GACvBA,EAAMwD,iBAIJpC,EAHiB,EAGSzB,GAC1BoD,EAAY,IAyCNrD,cAAeA,EACfC,WAAYA,IAEd,yBAAK3C,UAAU,OACZa,EAAS4E,OAAS,EACjB5E,GACAA,EAAS4C,KAAI,SAAC5C,GAAQ,OACpB,kBAAC,EAAW,CAAC+C,IAAK/C,EAASC,IAAKD,SAAUA,OAG5C,kDAGJ,yBAAKb,UAAW6F,EAAS5B,MACvB,kBAACwC,EAAA,EAAU,CACTf,MAAOE,EACP1D,KAAK,OACLwE,KAAMZ,EACNzC,SAhFS,SAACL,EAAOb,GAC3B4D,EAAY5D,GAEZ2D,EADqB,IAAb3D,EAAQ,GAGb6D,EACDZ,EAAmBU,EAAS,2BAAInD,GAAU,IAAC4D,OAAQP,KAKrD5B,EAAY0B,EAAUnD,Y,SE3BXgE,EAdI,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QACpB,OACE,yBAAK5G,UAAU,aACb,kBAAC6G,EAAA,EAAK,CAACC,UAAW,EAAG9G,UAAU,OAC7B,sCAEE,kBAACiC,EAAA,EAAM,CAACC,KAAK,oBAAoBC,MAAOyE,EAAQzE,SAElD,wCAAcyE,EAAQG,YCqCfzE,eAHQ,SAACC,GAAK,MAAM,CACjC1B,SAAU0B,EAAM1B,YAEqB,CAAEmG,ePbX,SAACC,GAAM,8CAAK,WAAO1C,GAAQ,uEAIlD,OAJkD,SAErDA,EAAS,CACPhB,KKlCuB,oBLmCtB,SACiBiB,IAAMC,IDpCxBlE,GCoCmC,sBAAkB0G,IAAU,KAAD,EAAxDrC,EAAG,OACXL,EAAS,CACPhB,KKzCqB,cL0CrBsB,QAASD,EAAIE,OACZ,gDAEHP,EAAS,CACPhB,KK/CuB,kBLgDtB,yDAEN,mDAfoC,KOatBjB,EA3CI,SAAH,GAIT,IAAD,IAHJzB,SAAY2B,EAAO,EAAPA,QAASmD,EAAO,EAAPA,QACrBuB,EAAK,EAALA,MACAF,EAAc,EAAdA,eAMA,OAJAd,qBAAU,WACRc,EAAeE,EAAMC,OAAO7D,MAC3B,CAAC0D,EAAgBE,EAAMC,OAAO7D,KAG/B,kBAAC,WAAQ,KACNqC,EACC,kBAACQ,EAAO,MACK,MAAX3D,GACF,yBAAKxC,UAAU,2CACb,yBAAKA,UAAU,YACb,yBAAKE,IAAKsC,EAAQvB,SAAUd,IAAKqC,EAAQvB,YAE3C,yBAAKjB,UAAU,YACb,uCACA,wBAAIA,UAAU,cAAY,iBAAgBwC,EAAQxB,aAClD,uBAAGhB,UAAU,QAAM,aAAYwC,EAAQzB,UACvC,uBAAGf,UAAU,SAAO,UAASwC,EAAQtB,OACrC,uBAAGlB,UAAU,SAAO,kBAAiBwC,EAAQpB,cAC7C,uBAAGpB,UAAU,SAAO,gBAAewC,EAAQ4E,cAG7C,6BACG5E,GACCA,EAAQoE,SACRpE,EAAQoE,QAAQnD,KAAI,SAACmD,GAAO,OAC1B,kBAAC,EAAU,CAAChD,IAAKgD,EAAQ9F,IAAK8F,QAASA,a,iCCnCjDS,EAAe,CACjBxG,SAAU,GACV2B,QAAS,KACTmD,SAAS,EACTC,UAAY,EACZ7E,SAAS,ICLEuG,4BAAgB,CAE3BzG,SDMW,WAAyC,IAA/B0B,EAAK,uDAAG8E,EAAcE,EAAM,uCACzChE,EAAkBgE,EAAlBhE,KAAMsB,EAAY0C,EAAZ1C,QACd,OAAQtB,GACJ,IHboB,eGehB,OAAO,2BACAhB,GAAK,IACR1B,SAAUgE,EACVc,SAAS,IAEb,IHhBc,eGiBV,kCACOpD,GAAK,IACRxB,SAAS8D,IAGjB,IHvBiB,kBGwBjB,OAAO,2BACAtC,GAAK,IACRqD,UAAUf,IAElB,IH7BmB,cG8Bf,OAAO,2BACAtC,GAAK,IACRC,QAASqC,EACTc,SAAS,IAEjB,IHpCqB,gBGqCjB,OAAO,2BACApD,GAAK,IACRoD,SAAS,EACT9E,SAAS,GACT+E,UAAU,IAGd,IHxCiB,kBGyCb,OAAO,2BACArD,GAAK,IACRoD,SAAS,IAGrB,QACI,OAAOpD,ME5CbiF,EAAa,CAACC,KAILC,EAHDC,sBAAYC,EAFL,GAEgCC,8BAAoBC,kBAAe,aAAIN,K,OCgB7EO,MAhBf,WACE,OACE,kBAAC,IAAQ,CAACL,MAAOA,GAEf,kBAAC,IAAa,KACd,kBAAC,EAAK,MACJ,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACM,KAAK,QAAQvG,UAAWwG,IAC/B,kBAAC,IAAK,CAACD,KAAK,cAAcvG,UAAWyG,IACrC,kBAAC,IAAQ,CAACjI,GAAG,cCNHkI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2DCXNqB,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,EAAG,OAENC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9I,QAAQ8I,MAAMA,EAAMC,a","file":"static/js/main.191ce1b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Hader() {\r\n\r\n    return(\r\n      <div className='nav bg-dark mb-2'>\r\n      <div className=\"navbar w-100\">\r\n      <p className=\"text-white\">Test Technique ATS</p>\r\n      <Link to={`/`}>\r\n          <div className=\"logo-navbar sign \"><img className='logo-navbar-img'src=\"/logo192.png\" alt='logo'  width={\"80px\"} />\r\n          \r\n          </div>\r\n\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Hader","\r\nconsole.log(process.env.NODE_ENV === \"development\")\r\nexport const baseUrl =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? process.env.REACT_APP_DEV_URL\r\n    : process.env.REACT_APP_PROD_URL\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_PRODUCTS,\r\n  PRODUCT_ERROR,\r\n  GET_PRODUCT,\r\n  CALCULATE_PAGER,\r\n  GET_CATEGORY,\r\n  LOADING_REQUEST,\r\n} from \"./types\";\r\nimport queryString from \"query-string\";\r\nimport { baseUrl } from \"./baseUrl\";\r\nexport const getProducts =\r\n  (formData, recherche = null) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: LOADING_REQUEST,\r\n      });\r\n      const res = await axios.get(\r\n        baseUrl + `/product/${formData}?${queryString.stringify(recherche)}`\r\n      );\r\n\r\n      dispatch({\r\n        type: GET_PRODUCTS,\r\n        payload: res.data.curentpage,\r\n      });\r\n      dispatch({\r\n        type: CALCULATE_PAGER,\r\n        payload: Math.ceil(res.data.totalData / 20),\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n      });\r\n    }\r\n  };\r\nexport const getProductbyID = (prodId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING_REQUEST,\r\n    });\r\n      const res = await axios.get(baseUrl + `/oneproduct/${prodId}`);\r\n    dispatch({\r\n      type: GET_PRODUCT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_ERROR,\r\n    });\r\n  }\r\n};\r\nexport const getAllCategory = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(baseUrl + `/productCat`);\r\n    dispatch({\r\n      type: GET_CATEGORY,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_ERROR,\r\n    });\r\n  }\r\n};\r\nexport const getRechercheReview =\r\n  (step, rate = null) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(\r\n        baseUrl + `/findbyReview/${step}?${queryString.stringify(rate)}`\r\n      );\r\n if(res.data.resulta && res.data.resulta[0].curentPage.length> 0){\r\n      dispatch({\r\n        type: GET_PRODUCTS,\r\n        payload: res.data.resulta[0].curentPage,\r\n      });\r\n      dispatch({\r\n        type: CALCULATE_PAGER,\r\n        payload: Math.ceil(res.data.resulta[0].totalData[0].count / 20),\r\n      });\r\n    }\r\n    else{\r\n    dispatch({\r\n      type: PRODUCT_ERROR,\r\n    });\r\n  }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n      });\r\n    }\r\n  };\r\n","import React, { Fragment } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n\r\n<div className=\"container\">\r\n    \r\n            <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\r\n                \r\n<Box className='m-auto' >\r\n<CircularProgress color=\"secondary\" />\r\n\r\n    </Box>\r\n            </div>\r\n      \r\n</div>\r\n    </Fragment>\r\n\r\n\r\n\r\n);","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from '@material-ui/core/Card';\r\nimport LazyLoad from 'react-lazyload';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Moment from 'react-moment'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst ProductItem = ({ products: { _id, category, productName, imageUrl,price, createdAt, averageScore } }) => {\r\n\r\n  \r\n  const getaverageScore = () => {\r\n\r\n   return    <Rating\r\n   name=\"simple-controlled\"\r\n   value={averageScore}\r\n  \r\n />\r\n  }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n             <Card className=\"m-3 col-sm-6 col-md-3 \">\r\n      <CardActionArea>\r\n     \r\n\r\n\r\n\r\n<LazyLoad height={150}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"150\"\r\n           image={imageUrl ? imageUrl :\"/imageload.gif\"}\r\n          className=\"spinner\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        </LazyLoad>\r\n        <CardContent>\r\n   \r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Category : {category}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Product Name : {productName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Price : {price}\r\n          </Typography>\r\n          \r\n          \r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Created At :    <Moment format='YYYY/MM/DD'>{createdAt}</Moment>\r\n          </Typography>\r\n          {\r\n            getaverageScore()\r\n           }\r\n       \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n      <Link to={`/Single/${_id}`}>\r\n                                    <Button>View Details</Button></Link>\r\n       \r\n      </CardActions>\r\n    </Card>\r\n\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nProductItem.propTypes = {\r\n    products: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProductItem\r\n","import React,{useState} from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Recherche({\r\n  products: { category },\r\n  handelRecherche,\r\n  setformvValue,\r\n  formvValue,\r\n}) {\r\n  let [inputRecherche , setinputRecherche] = useState({\r\n    productName: formvValue && formvValue.productName ? formvValue.productName : \"\",\r\n    category:formvValue && formvValue.category ? formvValue.category : \"\",\r\n    price:formvValue && formvValue.price ? formvValue.price : \"\"\r\n  });\r\n\r\n  const handelchangevalue = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setinputRecherche({ ...inputRecherche, [name]: value })\r\n    if (value.replace(\" \", \"\") !== \"\")\r\n      setformvValue({ ...formvValue, [name]: value });\r\n    else {\r\n      delete formvValue[name];\r\n      setformvValue({ ...formvValue });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"mb-0\">Recherche produit</h5>\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <form onSubmit={handelRecherche}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"productName\">Nom</label>\r\n                      <input\r\n                        onChange={handelchangevalue}\r\n                        className=\"form-control\"\r\n                        id=\"productName\"\r\n                        name=\"productName\"\r\n                        type=\"text\"\r\n                        value={inputRecherche.productName}\r\n                        placeholder=\"Nom\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"category\">Catégorie</label>\r\n                      <select\r\n                        onChange={handelchangevalue}\r\n                        className=\"form-control\"\r\n                        id=\"category\"\r\n                        name=\"category\"\r\n                        value={inputRecherche.category}\r\n                      >\r\n                        <option value=\"\">selectioner votre category</option>\r\n                        {category.map((el, index) => {\r\n                          return (\r\n                            <option key={index} value={el}>\r\n                              {el}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <i className=\"fa fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"price\">Prix</label>\r\n                      <input\r\n                        onChange={handelchangevalue}\r\n                        className=\"form-control\"\r\n                        id=\"price\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                        value={inputRecherche.price}\r\n                        placeholder=\"00\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-warning mb-3 float-right\"\r\n                  type=\"submit\"\r\n                >\r\n                  Rechercher\r\n                  <i className=\"fa fa-spinner fa-spin\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger mb-3 float-right\"\r\n                  type=\"reset\"\r\n                  onClick={() => setformvValue({})}\r\n                >\r\n                  Réinitialiser\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStatToProps = (state) => ({\r\n  products: state.products,\r\n  product: state.product,\r\n});\r\nexport default connect(mapStatToProps, null)(Recherche);\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProducts, getAllCategory,getRechercheReview } from \"../actions/ProductService\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../Component/Spinner\";\r\nimport ProductItem from \"../Component/ProductItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Recherche from \"../Component/Recherche\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nconst Products = ({\r\n  getAllCategory,\r\n  getProducts,\r\n  getRechercheReview,\r\n  products: { products, loading, totalPage },\r\n}) => {\r\n  const classes1 = useStyles1();\r\n  let [formdata, setFormData] = useState(1);\r\n  let [formvValue, setformvValue] = useState(null);\r\n  let [inputReview , setInputReviw] = useState(null);\r\n  useEffect(() => {\r\n    getProducts(0);\r\n    getAllCategory();\r\n  }, [getProducts, getAllCategory]);\r\n\r\n  let { step } = formdata;\r\n  const handleChange = (event, value) => {\r\n    setFormData(value);\r\n    step = (value - 1) * 20;\r\n    formdata = step;\r\n    //find rating by page\r\n    if(inputReview){\r\n      getRechercheReview(formdata,{...formvValue,rating: inputReview })\r\n\r\n    }\r\n    //find prod by page \r\n    else {\r\n    getProducts(formdata, formvValue);\r\n    }\r\n  };\r\n\r\n  const handelRecherche = (event) => {\r\n    event.preventDefault();\r\n    let restartPager = 0;\r\n\r\n\r\n      getProducts(restartPager, formvValue);\r\n      setFormData(1);\r\n  \r\n \r\n  };\r\n  const findByRating = (event) => {\r\n  \r\n    const value = event.target.value;\r\n    //find rating\r\n    if (value !== \"\") {\r\n      console.log('')\r\n      setInputReviw(value)\r\n      let ratingobject = {...formvValue,rating: value };\r\n      getRechercheReview(0,ratingobject)\r\n    } //remove rating\r\n     else {\r\n      setInputReviw(null)\r\n      setformvValue(null)\r\n      getProducts(0);\r\n      setFormData(1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n          <label className=\"col-md-3\">Rating Recherche</label>\r\n          <input\r\n             className=\"col-md-3\"\r\n            type=\"number\"\r\n            placeholder=\"Rating recherche\"\r\n            min=\"0\"\r\n            max=\"5\"\r\n            onChange={findByRating}\r\n          />\r\n           </div>\r\n          <Recherche\r\n            handelRecherche={handelRecherche}\r\n            setformvValue={setformvValue}\r\n            formvValue={formvValue}\r\n          />\r\n          <div className=\"row\">\r\n            {products.length > 0 ? (\r\n              products &&\r\n              products.map((products) => (\r\n                <ProductItem key={products._id} products={products} />\r\n              ))\r\n            ) : (\r\n              <h4>No products Found</h4>\r\n            )}\r\n          </div>\r\n          <div className={classes1.root}>\r\n            <Pagination\r\n              count={totalPage}\r\n              name=\"step\"\r\n              page={formdata}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  getProducts: PropTypes.func.isRequired,\r\n  products: PropTypes.object.isRequired,\r\n};\r\nconst mapStatToProps = (state) => ({\r\n  products: state.products,\r\n});\r\nexport default connect(mapStatToProps, { getProducts, getAllCategory,getRechercheReview })(\r\n  Products\r\n);\r\n","export const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const PRODUCT_ERROR = 'PRODUCT_ERROR';\r\nexport const GET_PRODUCT = 'GET_PRODUCT';\r\nexport const CALCULATE_PAGER='CALCULATE_PAGER';\r\nexport const GET_CATEGORY='GET_CATEGORY';\r\nexport const LOADING_REQUEST='LOADING_REQUEST';\r\n\r\n","import React from \"react\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst ReviewItem = ({ reviews }) => {\r\n  return (\r\n    <div className=\"mt-2 mb-2\">\r\n      <Paper elevation={3} className=\"p-2\">\r\n        <h4>\r\n          Rating:\r\n          <Rating name=\"simple-controlled\" value={reviews.value} />\r\n        </h4>\r\n        <p> content :{reviews.content}</p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewItem;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport Spinner from \"../Component/Spinner\";\r\n\r\nimport { getProductbyID } from \"../actions/ProductService\";\r\nimport { connect } from \"react-redux\";\r\nimport ReviewItem from \"../Component/ReviewItem\";\r\nconst SingleProd = ({\r\n  products: { product, loading },\r\n  match,\r\n  getProductbyID,\r\n}) => {\r\n  useEffect(() => {\r\n    getProductbyID(match.params.id);\r\n  }, [getProductbyID, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : product != null &&  (\r\n        <div className=\"m-2 row gx-4 gx-lg-5 align-items-center\">\r\n          <div className=\"col-md-6\">\r\n            <img src={product.imageUrl} alt={product.imageUrl} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h4>Details</h4>\r\n            <h6 className=\"card-title\">Product Name :{product.productName}</h6>\r\n            <p className=\"mb-1\">Category: {product.category}</p>\r\n            <p className=\" mb-1\">Price: {product.price}</p>\r\n            <p className=\" mb-1\">Average Score: {product.averageScore}</p>\r\n            <p className=\" mb-1\">Description: {product.description}</p>\r\n          </div>\r\n\r\n          <div>\r\n            {product &&\r\n              product.reviews &&\r\n              product.reviews.map((reviews) => (\r\n                <ReviewItem key={reviews._id} reviews={reviews} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStatToProps = (state) => ({\r\n  products: state.products,\r\n});\r\nexport default connect(mapStatToProps, { getProductbyID })(SingleProd);\r\n","import { GET_PRODUCTS, PRODUCT_ERROR, GET_PRODUCT,CALCULATE_PAGER,GET_CATEGORY,LOADING_REQUEST } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    product: null,\r\n    loading: true,\r\n    totalPage : 1,\r\n    category:[]\r\n\r\n}\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PRODUCTS:\r\n\r\n            return {\r\n                ...state,\r\n                products: payload,\r\n                loading: false\r\n            }\r\n            case GET_CATEGORY:{\r\n                return{\r\n                    ...state,\r\n                    category:payload\r\n                }\r\n            }\r\n            case CALCULATE_PAGER:\r\n            return {\r\n                ...state,\r\n                totalPage:payload\r\n            }\r\n        case GET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: payload,\r\n                loading: false\r\n            }\r\n        case PRODUCT_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products:[],\r\n                totalPage:1\r\n\r\n            }\r\n            case LOADING_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n    \r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport products from './Products'\r\nexport default combineReducers({\r\n\r\n    products\r\n\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Hader from \"./Component/Hader\";\r\nimport Products from \"./page/Products\";\r\nimport SingleProd from \"./page/SingleProd\";\r\nimport \"./App.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      \r\n      <BrowserRouter>\r\n      <Hader />\r\n        <Switch>\r\n          <Route path=\"/home\" component={Products} />\r\n          <Route path=\"/Single/:id\" component={SingleProd} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}